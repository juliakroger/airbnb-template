{"ast":null,"code":"import _classCallCheck from \"/home/kroger/Documents/book-shelf/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/kroger/Documents/book-shelf/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/kroger/Documents/book-shelf/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/kroger/Documents/book-shelf/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/kroger/Documents/book-shelf/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/kroger/Documents/book-shelf/src/components/BooksToRead.js\";\nimport React, { Component } from 'react';\nimport { reactLocalStorage } from 'reactjs-localstorage';\nvar user = reactLocalStorage.getObject('user');\n\nvar BooksToRead =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BooksToRead, _Component);\n\n  function BooksToRead() {\n    var _this;\n\n    _classCallCheck(this, BooksToRead);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BooksToRead).call(this));\n    _this.state = {\n      books: [],\n      user_id: user.user\n    };\n    return _this;\n  }\n\n  _createClass(BooksToRead, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:3000/booksToRead').then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this2.setState({\n          books: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"pa4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"tc f2 black-70 coolFont\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Books to read\"), React.createElement(\"div\", {\n        className: \"overflow-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"f6 w-100 mw8 center\",\n        cellSpacing: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        className: \"lh-copy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, this.state.books.map(function (book) {\n        return React.createElement(\"tr\", {\n          className: \"stripe-dark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          className: \"pa3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, book.name), React.createElement(\"td\", {\n          className: \"pa3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, book.author), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"f6 ttu pv2 ph3 pointer bg-light-blue hover-bg-lightest-blue bn br-pill\",\n          type: \"submit\",\n          value: \"Read it!\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        })));\n      })))));\n    }\n  }]);\n\n  return BooksToRead;\n}(Component);\n\nexport default BooksToRead;","map":{"version":3,"sources":["/home/kroger/Documents/book-shelf/src/components/BooksToRead.js"],"names":["React","Component","reactLocalStorage","user","getObject","BooksToRead","state","books","user_id","fetch","then","response","json","data","setState","map","book","name","author"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AAEA,IAAMC,IAAI,GAAID,iBAAiB,CAACE,SAAlB,CAA4B,MAA5B,CAAd;;IAEMC,W;;;;;AACF,yBAAa;AAAA;;AAAA;;AACT;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,OAAO,EAAEL,IAAI,CAACA;AAFL,KAAb;AAFS;AAMZ;;;;wCAEmB;AAAA;;AAEhBM,MAAAA,KAAK,CAAC,mCAAD,CAAL,CACKC,IADL,CACU,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADlB,EAEKF,IAFL,CAEU,UAAAG,IAAI;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAACP,UAAAA,KAAK,EAAEM;AAAR,SAAd,CAAJ;AAAA,OAFd;AAGH;;;6BAEO;AACR,aACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAC,qBAAjB;AAAuC,QAAA,WAAW,EAAC,GAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGhB,KAAKP,KAAL,CAAWC,KAAX,CAAiBQ,GAAjB,CAAqB,UAACC,IAAD,EAAU;AAC3B,eACI;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAI,UAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqBA,IAAI,CAACC,IAA1B,CADJ,EAEI;AAAI,UAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqBD,IAAI,CAACE,MAA1B,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI;AAAO,UAAA,SAAS,EAAC,wEAAjB;AAA0F,UAAA,IAAI,EAAC,QAA/F;AAAwG,UAAA,KAAK,EAAC,UAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAJ,CAHJ,CADJ;AAOH,OARD,CAHgB,CADJ,CADJ,CAFJ,CADJ;AA6BC;;;;EA9CqBjB,S;;AAiD1B,eAAeI,WAAf","sourcesContent":["import React , {Component} from 'react';\nimport { reactLocalStorage } from 'reactjs-localstorage';\n\nconst user = (reactLocalStorage.getObject('user'))\n\nclass BooksToRead extends Component{\n    constructor(){\n        super();\n        this.state = {\n            books: [],\n            user_id: user.user\n        }\n    }\n\n    componentDidMount() {\n\n        fetch('http://localhost:3000/booksToRead')\n            .then(response => response.json())\n            .then(data => this.setState({books: data}))\n    }\n\n    render(){\n    return(\n        <div className=\"pa4\">\n            <h2 className=\"tc f2 black-70 coolFont\">Books to read</h2>\n            <div className=\"overflow-auto\">\n                <table className=\"f6 w-100 mw8 center\" cellSpacing=\"0\">\n                    <tbody className=\"lh-copy\">\n\n{\n    this.state.books.map((book) => {\n        return (\n            <tr className=\"stripe-dark\">\n                <td className=\"pa3\">{book.name}</td>\n                <td className=\"pa3\">{book.author}</td>\n                <td><input className=\"f6 ttu pv2 ph3 pointer bg-light-blue hover-bg-lightest-blue bn br-pill\" type=\"submit\" value=\"Read it!\"/></td>\n            </tr>\n        )\n    })\n\n}\n\n\n\n                    </tbody>\n                </table>\n\n\n            </div>\n        </div>\n    );\n    }\n}\n\nexport default BooksToRead;"]},"metadata":{},"sourceType":"module"}